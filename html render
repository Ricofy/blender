<div id="ricofy-3d" style="width: 100%; height: 600px;"></div>

<script src="https://cdn.jsdelivr.net/npm/three@0.148.0/build/three.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.148.0/examples/js/loaders/GLTFLoader.js"></script>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const container = document.getElementById('ricofy-3d');
  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(35, container.clientWidth / container.clientHeight, 0.1, 100);
  camera.position.set(0, 0, 4);

  const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
  renderer.setSize(container.clientWidth, container.clientHeight);
  container.appendChild(renderer.domElement);

  const light = new THREE.DirectionalLight(0xffffff, 1);
  light.position.set(2, 2, 2);
  scene.add(light);
  scene.add(new THREE.AmbientLight(0xffffff, 0.5));

  let model;
  const loader = new THREE.GLTFLoader();
  loader.load(
    'https://raw.githubusercontent.com/Ricofy/blender/main/3D%20Logo%20R%20Ricofy.glb',
    function (gltf) {
      model = gltf.scene;
      model.scale.set(1.5, 1.5, 1.5);
      scene.add(model);
      console.log('Modelo carregado com sucesso');
    },
    undefined,
    function (error) {
      console.error('Erro ao carregar modelo:', error);
    }
  );

  window.addEventListener('mousemove', (event) => {
    if (!model) return;
    const x = (event.clientX / window.innerWidth - 0.5) * 2;
    const y = (event.clientY / window.innerHeight - 0.5) * 2;
    model.rotation.y = x * Math.PI * 0.5;
    model.rotation.x = -y * Math.PI * 0.3;
  });

  window.addEventListener('resize', () => {
    camera.aspect = container.clientWidth / container.clientHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(container.clientWidth, container.clientHeight);
  });

  function animate() {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }

  animate();
});
</script>
